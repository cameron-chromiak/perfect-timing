<!--
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <link rel="stylesheet" href="style.css">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta/css/bootstrap.min.css" integrity="sha384-/Y6pD6FV/Vv2HJnA6t+vslU6fwYXjCFtcEpHbNJ0lyAFsXTsjBbfaDjzALeQsN6M"
    crossorigin="anonymous">
  <title>Document</title>
</head>

<body>
-->
<style media="screen">
.row-container{
  white-space: nowrap;
}
.bg-green{
  background: lightgreen;
}
.generated-row{
  /* border: 1px solid black; */
  white-space: nowrap;
  height: 35px;
  margin-bottom: 0;
}
.generated-div{
  height: 35px;
  width: 75px;
  vertical-align: bottom;
  margin-top: 1px;
  margin-top: 5px;
  /* background: lightgrey; */
  margin-right: 0;
}
.constant-headers{

  white-space: nowrap;
  padding-bottom: 30px;
}
.scheduele-container{
  overflow-x: scroll;
  white-space: nowrap;
  height: 500px;
}
.marg{
    margin-left: -4px;
    width: 75px;
    padding-left: 10px;
}
</style>
<div class="mt-max">
  <a href="/scheduele/dashboard"><button id="back-save" class="btn btn-sm btn-primary">Back and Save</button></a>
  <h5>Use our <strong><a href="/about">SchedueleBuilder</a></strong>&trade;, and everyone will be on time</h5>
  <hr>
  <div class="scheduele-container text-center" id="scheduele-container">
  <div class="constant-headers" id="constant-headers">
    <div class="d-inline-block border py-2 marg">Name</div>
    <div class="d-inline-block border py-2 marg">0800</div>
    <div class="d-inline-block border py-2 marg">0900</div>
    <div class="d-inline-block border py-2 marg">1000</div>
    <div class="d-inline-block border py-2 marg">1100</div>
    <div class="d-inline-block border py-2 marg">1200</div>
    <div class="d-inline-block border py-2 marg">1300</div>
    <div class="d-inline-block border py-2 marg">1400</div>
    <div class="d-inline-block border py-2 marg">1500</div>
    <div class="d-inline-block border py-2 marg">1600</div>
    <div class="d-inline-block border py-2 marg">1700</div>
    <div class="d-inline-block border py-2 marg">1800</div>
    <div class="d-inline-block border py-2 marg">1900</div>
    <div class="d-inline-block border py-2 marg">2000</div>
    <div class="d-inline-block border py-2 marg">2100</div>
    <div class="d-inline-block border py-2 marg">2200</div>
    <div class="d-inline-block border py-2 marg">2300</div>
    <div class="d-inline-block border py-2 marg">2400</div>
  </div>
  <div class="row-container"></div>
  </div>
</div>


<div class="col-md-8 mx-auto">
  {{#each errors}}
    <div class="alert alert-danger">
      {{text}}
    </div>
  {{/each}}
  <div class="form-container">




<form action="/scheduele/pushObject" method="POST">
<div class="row">
  <div class="col-sm-12 col-md-8 offset-md-2">
    <h5>Name</h5>
    <input type="text" id="new-name" name="name" class="d-inline">
    <h5>Start</h5>
      <select id="time-start"name="start">
        <option value="1">8</option>
        <option value="2">9</option>
        <option value="3">10</option>
        <option value="4">11</option>
        <option value="5">12</option>
        <option value="6">1</option>
        <option value="7">2</option>
        <option value="7">3</option>
        <option value="9">4</option>
        <option value="10">5</option>
        <option value="11">6</option>
        <option value="12">7</option>
        <option value="13">8</option>
        <option value="14">9</option>
        <option value="15">10</option>
        <option value="16">11</option>
        <option value="17">12</option>
      </select>
    <h5>End</h5>
      <select id="time-end" name="end">
        <option value="1">8</option>
        <option value="2">9</option>
        <option value="3">10</option>
        <option value="4">11</option>
        <option value="5">12</option>
        <option value="6">1</option>
        <option value="7">2</option>
        <option value="7">3</option>
        <option value="9">4</option>
        <option value="10">5</option>
        <option value="11">6</option>
        <option value="12">7</option>
        <option value="13">8</option>
        <option value="14">9</option>
        <option value="15">10</option>
        <option value="16">11</option>
        <option value="17">12</option>
        <option value="18">1</option>
      </select>

</div>
</div>
<div class="row">
  <div class="col-md-6">
    <!-- <button type="submit" class="btn btn-primary mt-2" id="add-btn"name="button">Add</button> -->
  </div>
</div>
</form>

<button type="submit" class="btn btn-primary mt-2" id="add-btn"name="button">Add</button>
<button type="submit"class="btn btn-success mt-2" id="save-btn" name="button">Save</button>
<button type="submit"class="btn btn-danger mt-2" id="delete-btn" name="button">Delete</button>


<script type="text/javascript">
let rowCount = 1
let myObj = []
var myObj2 = JSON.parse('{{{json myObj2}}}')
console.log(myObj2)


let addBtn = document.getElementById('add-btn')
let saveBtn = document.getElementById('save-btn')
let dltBtn = document.getElementById('delete-btn')
let backSave = document.getElementById('back-save')

addBtn.addEventListener('click', createNewObj)
saveBtn.addEventListener('click', saveObj)
backSave.addEventListener('click', saveObj)
dltBtn.addEventListener('click', deleteObj)


$('body').ready(function(){
  myObj = myObj.concat(myObj2)
  main(myObj)
})

function createNewObj(){
  let startTime = document.getElementById('time-start').value
  let endTime = document.getElementById('time-end').value
  let name = document.getElementById('new-name').value
  myObj.push({name: name, start: startTime, end: endTime})
  clearBoard()//main is called within
}
function saveObj(){
  $.post('', {data:JSON.stringify(myObj)}, function(res){
    // console.log(res);
  })
}
function deleteObj(e){
  e.preventDefault()
  $.ajax({
    url: '',
    type: 'DELETE',
    success: function(e){
      console.log(e)
      window.location.pathname = '/scheduele/dashboard'
    }
  })
}
function main(obj) {
  obj.forEach(function(person) {
    jQuery('<div/>', {
      id: `row-${rowCount}`,
      class: 'd-block',
    }).appendTo('.row-container')
    addHourDivs(rowCount, person)
    rowCount += 1
  })
}

function addHourDivs(rowCount, person) {
  let start = Number(person.start)
  let end = Number(person.end)
  let rowDivs
  for (let i = 0; i < 18; i++) {
    if (i == 0) {
      jQuery('<div/>', {
        id: `row${rowCount}-cell${i}`,
        class: `d-inline-block generated-div border zero-row${rowCount} `,
        text: person.name
      }).appendTo(`#row-${rowCount}`)
    } else {
      jQuery('<div/>', {
        id: `row${rowCount}-cell${i}`,
        class: `d-inline-block generated-div border px-4 py-2`
      }).appendTo(`#row-${rowCount}`)
    }
  }
  changeCellColor(start, end)
}
$('body').on('click', '.d-block', function(e){
  let i = $(this).index()
  myObj.splice(i, 1)
  console.log(myObj)
  $(this).remove()
})
// $('.d-block').click(function(e){
//   let i = $(this).index()
//   myObj.splice(i, 1)
//   console.log(myObj)
//   $(this).remove()
// })
function changeCellColor(start, end) {
  rowDivs = document.querySelectorAll(`#row${rowCount}-cell${start}`)
  while (start < end) {
    rowDivs = document.querySelectorAll(`#row${rowCount}-cell${start}`)
    rowDivs.forEach(cell => {
      $(cell).toggleClass('bg-green')
    })
    start += 1
  }
}
function clearBoard(){
  $('.row-container').empty()
    main(myObj)
}



</script>

</body>
</html>
